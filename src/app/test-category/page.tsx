import { getApolloClient } from '@/lib/apollo-client'
import { fetchCategoryWithChildren } from '@/services/pageService'

export default async function TestCategory() {
  const apolloClient = getApolloClient()

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é projects...')

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ projects
  const categoryData = await fetchCategoryWithChildren(apolloClient, 'projects')
  console.log('üìã –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ projects:', categoryData)

  return (
    <div style={{ padding: '20px', fontFamily: 'monospace' }}>
      <h1>–¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ projects</h1>

      {categoryData ? (
        <div>
          <h2>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h2>
          <ul>
            <li>
              <strong>ID:</strong> {categoryData.id}
            </li>
            <li>
              <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {categoryData.name}
            </li>
            <li>
              <strong>Slug:</strong> {categoryData.slug}
            </li>
            <li>
              <strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong>{' '}
              {categoryData.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
            </li>
          </ul>

          <h2>
            –î–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({categoryData.children?.nodes?.length || 0}):
          </h2>
          {categoryData.children?.nodes &&
          categoryData.children.nodes.length > 0 ? (
            <ul>
              {categoryData.children.nodes.map((child: any) => (
                <li key={child.id}>
                  <strong>{child.name}</strong> - slug: {child.slug} - –ø–æ—Å—Ç–æ–≤:{' '}
                  {child.count}
                  {child.description && <p>–û–ø–∏—Å–∞–Ω–∏–µ: {child.description}</p>}
                </li>
              ))}
            </ul>
          ) : (
            <p style={{ color: 'red' }}>–î–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!</p>
          )}

          <h2>–ü–æ—Å—Ç—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({categoryData.posts?.edges?.length || 0}):</h2>
          {categoryData.posts?.edges && categoryData.posts.edges.length > 0 ? (
            <ul>
              {categoryData.posts.edges.map(({ node: post }: any) => (
                <li key={post.id}>
                  <strong>{post.title}</strong> - slug: {post.slug}
                </li>
              ))}
            </ul>
          ) : (
            <p style={{ color: 'orange' }}>–ü–æ—Å—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
          )}

          <h2>Raw –¥–∞–Ω–Ω—ã–µ:</h2>
          <pre
            style={{
              background: '#f5f5f5',
              padding: '10px',
              overflow: 'auto',
              maxHeight: '400px',
            }}
          >
            {JSON.stringify(categoryData, null, 2)}
          </pre>
        </div>
      ) : (
        <p style={{ color: 'red' }}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è projects –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!</p>
      )}
    </div>
  )
}
