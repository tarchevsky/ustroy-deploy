import { GET_ALL_PAGES } from '@/graphql/queries/getAllPages'
import { GET_PAGE_SETTINGS } from '@/graphql/queries/getPageSettings'
import { PageSettingsData } from '@/graphql/types/pageSettingsTypes'
import { PagesData } from '@/graphql/types/pagesTypes'
import { ApolloClient, NormalizedCacheObject } from '@apollo/client'

export async function fetchAllPages(
  client: ApolloClient<NormalizedCacheObject>,
) {
  console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...')
  const { data } = await client.query<PagesData>({
    query: GET_ALL_PAGES,
  })
  console.log('üìã –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü:', data.pages.nodes.length)
  return data.pages.nodes
}

export async function fetchPageBySlug(
  client: ApolloClient<NormalizedCacheObject>,
  slug: string,
) {
  console.log('üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ slug:', slug)
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∏—â–µ–º –Ω—É–∂–Ω—É—é –ø–æ slug
    const allPages = await fetchAllPages(client)
    const page = allPages.find((p) => p.slug === slug)

    if (!page) {
      console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü')
      return null
    }

    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ slug, ID:', page.id)

    // –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ ID
    const { data } = await client.query<PageSettingsData>({
      query: GET_PAGE_SETTINGS,
      variables: { id: page.id },
    })

    console.log('üìÑ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', data.page)

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    return {
      ...page,
      ...data.page,
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ slug:', slug, error)
    return null
  }
}
