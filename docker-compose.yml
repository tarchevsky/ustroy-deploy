services:
  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./public:/usr/share/nginx/html:ro
      - wp_data:/var/www/html:ro
    depends_on:
      wordpress:
        condition: service_healthy
    ports:
      - '80:80'
      - '443:443'
    networks:
      - web
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  graphql-wait:
    image: curlimages/curl:8.5.0
    networks:
      - web
    depends_on:
      nginx:
        condition: service_healthy
      wordpress:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Ожидание готовности GraphQL endpoint...';
        for i in $$(seq 1 120); do
          echo \"Попытка $$i из 120...\";
          # Сначала проверяем доступность WordPress
          if curl -s -f -H 'Host: panel.ustroy.art' http://nginx/wp-admin/admin-ajax.php > /dev/null 2>&1; then
            # Затем проверяем GraphQL endpoint
            response=$$(curl -s -H 'Host: panel.ustroy.art' \
              -H 'Content-Type: application/json' \
              -d '{\"query\":\"query { __typename }\"}' \
              http://nginx/graphql 2>/dev/null);
            if echo \"$$response\" | grep -q '__typename'; then
              echo 'GraphQL endpoint готов!';
              exit 0;
            else
              echo \"GraphQL недоступен. Ответ: $$response\";
            fi;
          else
            echo 'WordPress недоступен';
          fi;
          if [ $$i -lt 120 ]; then
            echo 'Ожидание 3 секунды...';
            sleep 3;
          fi;
        done;
        echo 'GraphQL endpoint не стал доступен за 360 секунд';
        exit 1;
      "

  nextjs:
    build: .
    env_file: .env
    restart: always
    networks:
      - web
    expose:
      - 3000
    depends_on:
      graphql-wait:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=production

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./public:/usr/share/nginx/html
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /usr/share/nginx/html --quiet; sleep 7d; done"
    networks:
      - web

  db:
    image: mariadb:11
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - web
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  wordpress:
    image: wordpress:6.5-fpm-alpine
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'https://panel.ustroy.art');
        define('WP_SITEURL', 'https://panel.ustroy.art');
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - web
    expose:
      - 9000
    volumes:
      - wp_data:/var/www/html
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/99-custom.ini:ro
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f php-fpm > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 180s

  certbot-init:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./public:/usr/share/nginx/html
    entrypoint: >
      sh -c "certbot certonly --webroot -w /usr/share/nginx/html \
      --email i.tarchevsky@yandex.ru \
      --agree-tos \
      --no-eff-email \
      -d ustroy.art -d panel.ustroy.art"
    networks:
      - web
    depends_on:
      - nginx

volumes:
  certbot-etc:
  certbot-var:
  db_data:
  wp_data:

networks:
  web:
