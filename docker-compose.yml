services:
  # MariaDB Database
  db:
    image: mariadb:11.4
    container_name: ustroy_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - ustroy_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 5

  # WordPress
  wordpress:
    image: wordpress:6.7-php8.3-fpm
    container_name: ustroy_wordpress
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'https://${WORDPRESS_SITE_URL}');
        define('WP_SITEURL', 'https://${WORDPRESS_SITE_URL}');
        define('FORCE_SSL_ADMIN', true);
        if (isset($$_SERVER['HTTP_X_FORWARDED_PROTO']) && $$_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
          $$_SERVER['HTTPS'] = 'on';
        }
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - ustroy_network
    healthcheck:
      test: ["CMD-SHELL", "wp core is-installed || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx
  nginx:
    image: nginx:1.27-alpine
    container_name: ustroy_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - wordpress_data:/var/www/html:ro
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      wordpress:
        condition: service_healthy
    networks:
      - ustroy_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: ustroy_certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    entrypoint: ""
    command: >
      /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    networks:
      - ustroy_network
    profiles:
      - ssl
    depends_on:
      - nginx

  # Next.js (запускается отдельно)
  nextjs:
    build:
      context: .
      target: production
    container_name: ustroy_nextjs
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REVALIDATE_SECRET=${REVALIDATE_SECRET}
      - WORDPRESS_GRAPHQL_ENDPOINT=${WORDPRESS_GRAPHQL_ENDPOINT}
    expose:
      - "3000"
    networks:
      - ustroy_network
    profiles:
      - nextjs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  db_data:
  wordpress_data:
  certbot_www:
  certbot_conf:

networks:
  ustroy_network:
    driver: bridge
